{
  "ICredentialHandlerLDLocal": {
    "components": {
      "schemas": {
        "ICreateVerifiableCredentialLDArgs": {
          "type": "object",
          "properties": {
            "credential": {
              "$ref": "#/components/schemas/CredentialPayload",
              "description": "The json payload of the Credential according to the\n {@link  https://www.w3.org/TR/vc-data-model/#credentials | canonical model } \n\nThe signer of the Credential is chosen based on the `issuer.id` property of the `credential`\n\n'@context', 'type' and 'issuanceDate' will be added automatically if omitted"
            },
            "keyRef": {
              "type": "string",
              "description": "Optional. The key handle ( {@link  IKey#kid  } ) from the internal database."
            },
            "purpose": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IAuthenticationProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IControllerProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IAssertionProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IProofPurpose"
                }
              ],
              "description": "Use this purpose for the verification method in the DID when doing a check (defaults to CredentialIssuancePurpose)"
            }
          },
          "required": [
            "credential"
          ],
          "description": "Encapsulates the parameters required to create a\n {@link  https://www.w3.org/TR/vc-data-model/#credentials | W3C Verifiable Credential }"
        },
        "CredentialPayload": {
          "type": "object",
          "properties": {
            "issuer": {
              "$ref": "#/components/schemas/IssuerType"
            },
            "credentialSubject": {
              "$ref": "#/components/schemas/CredentialSubject"
            },
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "@context": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "issuanceDate": {
              "$ref": "#/components/schemas/DateType"
            },
            "expirationDate": {
              "$ref": "#/components/schemas/DateType"
            },
            "credentialStatus": {
              "$ref": "#/components/schemas/CredentialStatusReference"
            },
            "id": {
              "type": "string"
            }
          },
          "required": [
            "issuer"
          ],
          "description": "Used as input when creating Verifiable Credentials"
        },
        "IssuerType": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "The issuer of a  {@link  VerifiableCredential }  or the holder of a  {@link  VerifiablePresentation } .\n\nThe value of the issuer property MUST be either a URI or an object containing an id property. It is RECOMMENDED that the URI in the issuer or its id be one which, if de-referenced, results in a document containing machine-readable information about the issuer that can be used to verify the information expressed in the credential.\n\nSee  {@link  https://www.w3.org/TR/vc-data-model/#issuer | Issuer data model }"
        },
        "CredentialSubject": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "description": "The value of the credentialSubject property is defined as a set of objects that contain one or more properties that are each related to a subject of the verifiable credential. Each object MAY contain an id.\n\nSee  {@link  https://www.w3.org/TR/vc-data-model/#credential-subject | Credential Subject }"
        },
        "DateType": {
          "type": "string",
          "description": "Represents an issuance or expiration date for Credentials / Presentations. This is used as input when creating them."
        },
        "CredentialStatusReference": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "type"
          ],
          "description": "Used for the discovery of information about the current status of a verifiable credential, such as whether it is suspended or revoked. The precise contents of the credential status information is determined by the specific `credentialStatus` type definition, and varies depending on factors such as whether it is simple to implement or if it is privacy-enhancing.\n\nSee  {@link  https://www.w3.org/TR/vc-data-model/#status | Credential Status }"
        },
        "IAuthenticationProofPurpose": {
          "type": "object",
          "properties": {
            "term": {
              "type": "string"
            },
            "date": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            },
            "maxTimestampDelta": {
              "type": "number"
            },
            "controller": {
              "type": "object"
            },
            "challenge": {
              "type": "string"
            },
            "domain": {
              "type": "string"
            }
          }
        },
        "IControllerProofPurpose": {
          "type": "object",
          "properties": {
            "term": {
              "type": "string"
            },
            "date": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            },
            "maxTimestampDelta": {
              "type": "number"
            },
            "controller": {
              "type": "object"
            }
          }
        },
        "IAssertionProofPurpose": {
          "type": "object",
          "properties": {
            "term": {
              "type": "string"
            },
            "date": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            },
            "maxTimestampDelta": {
              "type": "number"
            },
            "controller": {
              "type": "object"
            }
          }
        },
        "IProofPurpose": {
          "type": "object",
          "properties": {
            "term": {
              "type": "string"
            },
            "date": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "number"
                }
              ]
            },
            "maxTimestampDelta": {
              "type": "number"
            }
          }
        },
        "VerifiableCredentialSP": {
          "type": "object",
          "properties": {
            "issuer": {
              "$ref": "#/components/schemas/IssuerType"
            },
            "credentialSubject": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialSubject"
                  }
                },
                {
                  "$ref": "#/components/schemas/CredentialSubject"
                }
              ]
            },
            "type": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "@context": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "issuanceDate": {
              "type": "string"
            },
            "expirationDate": {
              "type": "string"
            },
            "credentialStatus": {
              "$ref": "#/components/schemas/CredentialStatusSP"
            },
            "id": {
              "type": "string"
            },
            "validFrom": {
              "type": "string"
            },
            "validUntil": {
              "type": "string"
            },
            "proof": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CredentialProofSP"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialProofSP"
                  }
                },
                {
                  "$ref": "#/components/schemas/ProofType"
                }
              ]
            }
          },
          "required": [
            "@context",
            "credentialSubject",
            "issuanceDate",
            "issuer",
            "proof"
          ]
        },
        "CredentialStatusSP": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "revocationListIndex": {
              "type": "string"
            },
            "revocationListCredential": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "type"
          ]
        },
        "CredentialProofSP": {
          "type": "object",
          "properties": {
            "type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/IProofType"
                }
              ]
            },
            "created": {
              "type": "string"
            },
            "proofPurpose": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IProofPurpose"
                },
                {
                  "type": "string"
                }
              ]
            },
            "verificationMethod": {
              "type": "string"
            },
            "challenge": {
              "type": "string"
            },
            "domain": {
              "type": "string"
            },
            "proofValue": {
              "type": "string"
            },
            "jws": {
              "type": "string"
            },
            "nonce": {
              "type": "string"
            },
            "requiredRevealStatements": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "created",
            "proofPurpose",
            "verificationMethod"
          ],
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "not": {}
              }
            ]
          }
        },
        "IProofType": {
          "type": "string",
          "enum": [
            "Ed25519Signature2018",
            "Ed25519Signature2020",
            "EcdsaSecp256k1Signature2019",
            "EcdsaSecp256k1RecoverySignature2020",
            "JsonWebSignature2020",
            "RsaSignature2018",
            "GpgSignature2020",
            "JcsEd25519Signature2020",
            "BbsBlsSignatureProof2020",
            "BbsBlsBoundSignatureProof2020",
            "JwtProof2020"
          ]
        },
        "ProofType": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            }
          },
          "description": "A proof property of a  {@link  VerifiableCredential }  or  {@link  VerifiablePresentation }"
        },
        "ICreateVerifiablePresentationLDArgs": {
          "type": "object",
          "properties": {
            "presentation": {
              "$ref": "#/components/schemas/PresentationPayload",
              "description": "The json payload of the Presentation according to the\n {@link  https://www.w3.org/TR/vc-data-model/#presentations | canonical model } .\n\nThe signer of the Presentation is chosen based on the `holderDID` property of the `presentation`\n\n'@context', 'type' and 'issuanceDate' will be added automatically if omitted"
            },
            "challenge": {
              "type": "string",
              "description": "Optional (only JWT) string challenge parameter to add to the verifiable presentation."
            },
            "domain": {
              "type": "string",
              "description": "Optional string domain parameter to add to the verifiable presentation."
            },
            "keyRef": {
              "type": "string",
              "description": "Optional. The key handle ( {@link  IKey#kid  } ) from the internal database."
            },
            "purpose": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IAuthenticationProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IControllerProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IAssertionProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IProofPurpose"
                }
              ]
            }
          },
          "required": [
            "presentation"
          ],
          "description": "Encapsulates the parameters required to create a\n {@link  https://www.w3.org/TR/vc-data-model/#presentations | W3C Verifiable Presentation }"
        },
        "PresentationPayload": {
          "type": "object",
          "properties": {
            "holder": {
              "type": "string"
            },
            "verifiableCredential": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/W3CVerifiableCredential"
              }
            },
            "type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "@context": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "verifier": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "issuanceDate": {
              "$ref": "#/components/schemas/DateType"
            },
            "expirationDate": {
              "$ref": "#/components/schemas/DateType"
            },
            "id": {
              "type": "string"
            }
          },
          "required": [
            "holder"
          ],
          "description": "Used as input when creating Verifiable Presentations"
        },
        "W3CVerifiableCredential": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/VerifiableCredential"
            },
            {
              "$ref": "#/components/schemas/CompactJWT"
            }
          ],
          "description": "Represents a signed Verifiable Credential (includes proof), in either JSON or compact JWT format. See  {@link  https://www.w3.org/TR/vc-data-model/#credentials | VC data model } \nSee  {@link  https://www.w3.org/TR/vc-data-model/#proof-formats | proof formats }"
        },
        "VerifiableCredential": {
          "type": "object",
          "properties": {
            "proof": {
              "$ref": "#/components/schemas/ProofType"
            },
            "issuer": {
              "$ref": "#/components/schemas/IssuerType"
            },
            "credentialSubject": {
              "$ref": "#/components/schemas/CredentialSubject"
            },
            "type": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "@context": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "issuanceDate": {
              "type": "string"
            },
            "expirationDate": {
              "type": "string"
            },
            "credentialStatus": {
              "$ref": "#/components/schemas/CredentialStatusReference"
            },
            "id": {
              "type": "string"
            }
          },
          "required": [
            "@context",
            "credentialSubject",
            "issuanceDate",
            "issuer",
            "proof"
          ],
          "description": "Represents a signed Verifiable Credential payload (includes proof), using a JSON representation. See  {@link  https://www.w3.org/TR/vc-data-model/#credentials | VC data model }"
        },
        "CompactJWT": {
          "type": "string",
          "description": "Represents a Json Web Token in compact form. \"header.payload.signature\""
        },
        "VerifiablePresentationSP": {
          "type": "object",
          "properties": {
            "holder": {
              "type": "string"
            },
            "verifiableCredential": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/W3CVerifiableCredentialSP"
              }
            },
            "type": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "@context": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "verifier": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "issuanceDate": {
              "type": "string"
            },
            "expirationDate": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "presentation_submission": {
              "$ref": "#/components/schemas/PresentationSubmission"
            },
            "proof": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CredentialProofSP"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialProofSP"
                  }
                },
                {
                  "$ref": "#/components/schemas/ProofType"
                }
              ]
            }
          },
          "required": [
            "@context",
            "holder",
            "proof",
            "type",
            "verifiableCredential"
          ]
        },
        "W3CVerifiableCredentialSP": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/VerifiableCredential"
            },
            {
              "$ref": "#/components/schemas/VerifiableCredentialSP"
            },
            {
              "$ref": "#/components/schemas/CompactJWT"
            }
          ]
        },
        "PresentationSubmission": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A UUID or some other unique ID to identify this Presentation Submission"
            },
            "definition_id": {
              "type": "string",
              "description": "A UUID or some other unique ID to identify this Presentation Definition"
            },
            "descriptor_map": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Descriptor"
              },
              "description": "List of descriptors of how the claims are being mapped to presentation definition"
            }
          },
          "required": [
            "id",
            "definition_id",
            "descriptor_map"
          ],
          "description": "It expresses how the inputs are presented as proofs to a Verifier."
        },
        "Descriptor": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID to identify the descriptor from Presentation Definition Input Descriptor it coresponds to."
            },
            "path": {
              "type": "string",
              "description": "The path where the verifiable credential is located in the presentation submission json"
            },
            "path_nested": {
              "$ref": "#/components/schemas/Descriptor"
            },
            "format": {
              "type": "string",
              "description": "The Proof or JWT algorith that the proof is in"
            }
          },
          "required": [
            "id",
            "path",
            "format"
          ],
          "description": "descriptor map laying out the structure of the presentation submission."
        },
        "IVerifyCredentialLDArgs": {
          "type": "object",
          "properties": {
            "credential": {
              "$ref": "#/components/schemas/VerifiableCredential",
              "description": "The json payload of the Credential according to the\n {@link  https://www.w3.org/TR/vc-data-model/#credentials | canonical model } \n\nThe signer of the Credential is chosen based on the `issuer.id` property of the `credential`"
            },
            "fetchRemoteContexts": {
              "type": "boolean",
              "description": "Set this to true if you want the '@context' URLs to be fetched in case they are not pre-loaded.",
              "default": false
            },
            "purpose": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IAuthenticationProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IControllerProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IAssertionProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IProofPurpose"
                }
              ],
              "description": "Use this presentation purpose for the verification method in the DID when doing a check (defaults to CredentialIssuancePurpose)"
            },
            "checkStatus": {
              "type": "object",
              "properties": {
                "prototype": {},
                "length": {
                  "type": "number"
                },
                "arguments": {},
                "caller": {
                  "$ref": "#/components/schemas/interface-135971151-10057-11521-135971151-0-217681"
                }
              },
              "required": [
                "prototype",
                "length",
                "arguments",
                "caller"
              ],
              "description": "Check status function, to check verifiableCredentials that have a credentialStatus property"
            }
          },
          "required": [
            "credential"
          ],
          "description": "Encapsulates the parameters required to verify a\n {@link  https://www.w3.org/TR/vc-data-model/#credentials | W3C Verifiable Credential }"
        },
        "interface-135971151-10057-11521-135971151-0-217681": {
          "type": "object",
          "properties": {
            "prototype": {},
            "length": {
              "type": "number"
            },
            "arguments": {},
            "caller": {
              "$ref": "#/components/schemas/interface-135971151-10057-11521-135971151-0-217681"
            }
          },
          "required": [
            "prototype",
            "length",
            "arguments",
            "caller"
          ]
        },
        "IVerifyPresentationLDArgs": {
          "type": "object",
          "properties": {
            "presentation": {
              "$ref": "#/components/schemas/VerifiablePresentation",
              "description": "The json payload of the Credential according to the\n {@link  https://www.w3.org/TR/vc-data-model/#credentials | canonical model } \n\nThe signer of the Credential is chosen based on the `issuer.id` property of the `credential`"
            },
            "challenge": {
              "type": "string",
              "description": "Optional (only for JWT) string challenge parameter to verify the verifiable presentation against"
            },
            "domain": {
              "type": "string",
              "description": "Optional (only for JWT) string domain parameter to verify the verifiable presentation against"
            },
            "fetchRemoteContexts": {
              "type": "boolean",
              "description": "Set this to true if you want the '@context' URLs to be fetched in case they are not pre-loaded.",
              "default": false
            },
            "presentationPurpose": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IAuthenticationProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IControllerProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IAssertionProofPurpose"
                },
                {
                  "$ref": "#/components/schemas/IProofPurpose"
                }
              ],
              "description": "Use this presentation purpose for the verification method in the DID when doing a check (defaualts to assertionMethod)"
            },
            "checkStatus": {
              "type": "object",
              "properties": {
                "prototype": {},
                "length": {
                  "type": "number"
                },
                "arguments": {},
                "caller": {
                  "$ref": "#/components/schemas/interface-135971151-10057-11521-135971151-0-217681"
                }
              },
              "required": [
                "prototype",
                "length",
                "arguments",
                "caller"
              ],
              "description": "Check status function, to check verifiableCredentials that have a credentialStatus property"
            }
          },
          "required": [
            "presentation"
          ],
          "description": "Encapsulates the parameters required to verify a\n {@link  https://www.w3.org/TR/vc-data-model/#presentations | W3C Verifiable Presentation }"
        },
        "VerifiablePresentation": {
          "type": "object",
          "properties": {
            "proof": {
              "$ref": "#/components/schemas/ProofType"
            },
            "holder": {
              "type": "string"
            },
            "verifiableCredential": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/W3CVerifiableCredential"
              }
            },
            "type": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "@context": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "verifier": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "issuanceDate": {
              "type": "string"
            },
            "expirationDate": {
              "type": "string"
            },
            "id": {
              "type": "string"
            }
          },
          "required": [
            "@context",
            "holder",
            "proof"
          ],
          "description": "Represents a signed Verifiable Presentation (includes proof), using a JSON representation. See  {@link  https://www.w3.org/TR/vc-data-model/#presentations | VP data model }"
        }
      },
      "methods": {
        "createVerifiableCredentialLDLocal": {
          "description": "Creates a Verifiable Credential. The payload, signer and format are chosen based on the ",
          "arguments": {
            "$ref": "#/components/schemas/ICreateVerifiableCredentialLDArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/VerifiableCredentialSP"
          }
        },
        "createVerifiablePresentationLDLocal": {
          "description": "Creates a Verifiable Presentation. The payload, signer and format are chosen based on the ",
          "arguments": {
            "$ref": "#/components/schemas/ICreateVerifiablePresentationLDArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/VerifiablePresentationSP"
          }
        },
        "verifyCredentialLDLocal": {
          "description": "Verifies a Verifiable Credential JWT or LDS Format.",
          "arguments": {
            "$ref": "#/components/schemas/IVerifyCredentialLDArgs"
          },
          "returnType": {
            "type": "boolean"
          }
        },
        "verifyPresentationLDLocal": {
          "description": "Verifies a Verifiable Presentation JWT or LDS Format.",
          "arguments": {
            "$ref": "#/components/schemas/IVerifyPresentationLDArgs"
          },
          "returnType": {
            "type": "boolean"
          }
        }
      }
    }
  }
}